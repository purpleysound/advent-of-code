input = """MVWpzTTrTFNNLtssjV
hRJncnJCnhPCnBSbCQRhhQRPFHmsbHLzbLNHsjNNFmGGGsGF
lSBQJBBBBcnccnQvBnPQznfrgwlrTZfDwTfWqrrpgMpw
sRPgrzSgrSbfTrgspBPsDWWTmdnvdZWZwTmwvdmd
tVGpCGqCGjlHcNGVNHZDmnZMWdWMWCdZDvnZ
HqpQptLlclLGtlpcjHNhQqfRhrSBrrbfbrSRrsPfBSgg
JpjLbQbFPBjDBBJLWltglfBfhhlcctht
vNFmsdFsnmzGtWvgzhzc
rqwRCCqmCTqHCnqRNTNFsJVMQSjLRbbVVbjQVLbLSV
mLNNCNDwBwDnmCwnJwLRvdlqZclRccsgvcZndc
QWMtVWbpVlgHHcgMHs
VsTVWhThsVQWzjtQPpVWjWbpwJNCJDCzSNNCCCSfmfBCSGLL
NbSfHnwDvwwfHwwQsHbWPgrsZsZjRPLRgLWhWP
lmMlTGFzVmzqjGLLZWWGhrCh
qFclMprqmrvbcnwDQtNQ
tWQZFvvtWQWbqQQggZZLvpLrpzDrmGDmmDHPzPzHrfnHTG
NMlhlTMccTCVBlRNHzJnzDDmnJmnGGBf
NMMSSSSSlNVMdjdNSNNhFwTbvbLqjbtLwWQwZqgg
jPwcJwRmmhJpbhNJVgDbrHzzzQzzBQHg
tdZqlCnnnlvZCqlnlCSqZdFCHGDBgzsDzssBtHGLQtrHsssL
TZZFSdrdlZMFZRMwMPmNcwNmwm
nsdhzmDBGQWQPvJPjbbW
gCgBqCNpMHTwgwqMPRJJTtWjbFRJFJvP
ZlCwBrwgmzhGzDrd
sTBHfcnBTnqHRvqPgFFbLtrQTPLjjm
GWzpwSJSpbwbNNGJPQrrtrrrrgzLtjzm
NNSlCCdplWwplCwSndnssdZfqVbHvfqc
rrfHgqnlllRrDgrCbQfszMPtmzPQzFsFMQ
JJLGVGjcwVcPQNNNtRPmLM
WThVJJWJBdGwBpBTqDrSRCCggShqbSCb
TbCqzqzmbCffzDbHRddLbdRFRS
ZmvZJPjPwwWNZJGtWSDRRDFWSLhhhMVVWL
ZwplGwmptNjZnjvnGGPjJlZppTrTsCczfggBgfgfggCsBrqr
gMBBbfBbBMfnMsvRvWJhDsQW
ZZqHLzczjjsLzlpjqTprNJvhQpRvtRJJQrtQtJ
llZlzZZzPZZqsTZscHczfnSwSPSwwgSBwwSnPwnf
chMtcPPgQtthqgvczhMTcCSBLBlGpsFnBnnsGvLplSFG
bhRmJWDRmHSmFGBnGBps
jdDZWbrDdDbbdbDrRRWwRjZRVqztCzqtcThcTQtgqVMMVzjq
flNmNHgcZwTzRLzMLRPlzz
nntqBJtFbbCbBVCnBtFjJjhVhLzLvRLvgRRvPvpMpvpp
CgJWjJQDjgBtnGNGfcssNfcwNW
MrMpMrGBznjPMGCmCrrjdwndfJLQNfdLQNdNggdL
sJVcZqvhZtVqhDFFsDJslcdwgwvwQwwQNbbTbwfLLTgL
RDDRcsSsstJstVDDqctszzmRmGjpjBRHPmmGHGrj
tdplZtlrBGwTlLQQ
sfsPPvNhWLQBhGQG
zPVfzVbbMcscvVfzzNgcJHnJZgtrrndJqjJqndrL
nglLjRCCHLLCnNCLHQnFNQmmVMbVmwMwlMwMMMWwBTsT
cqtfcqZpzhSvvBfWwbvrbT
PPqpDSqcSJPdPhtPtqZcpPtGjFRFFFNLJFGRgjFbGRNbHn
gjtRSLMqLdSgLMCltTSDQcQQqhDcfcfrWDhWrr
GwFZCwNzFJsPmFFmZmPPNhvDDfDWWmpvQWWfVDQppW
swNGZbPBGwnCgBBlBljl
BsrDsnQGwFFQQtfNTBNSffBgBt
VJlhWVLlRppLQZTCbtZTttgJ
ppLqqRhQdRPhqPVhdPjhljqHFnGnzFrjFFDznHFHrmwwnH
CJMmmJLmlshCCdmzjHjPWztgdnjttt
GwZvGwrgTcFpzHWjnT
GbqrvrRwbrbGbwwZBbgfhmJMmsDJhNRfLChhCh
CfgfjCLCgfgFgBhBsccswQwtsQHvBBtc
SbSMGbnmDMGJWmRmDmvzwtcscWtQzsrPsvHc
DbJdNpJSnMSJmpSSNVqgqgTTFVQTFqdZLq
MBMCmlllPSSlmmPPjCMpPgggJcnZgntJsDvHsDZt
hrNzhrRNbrhbGRbfpVLRGNqqngvnttngJctgDZJGcZvHvZnc
LTTzVqppSmwdTmQW
mmlBQmLbsbmRnFnwlqqprF
dZScZSZSdHcNMDcJwLqRfppzpzfTpHfF
JLWJLJJJdMmGtgCWjQjt
PPMzpVDblwGVMMzDLLjrcrjdzjdTzLjd
RRcCJRcNQRBqtCFBRJJsZWBWrjLWLHZZWndBLWjh
qQQtttNqsqqtJRgqQfcpcgDcbggplGbfMp
QmmSTQPmLSmjpczMJtwPzg
BHHHdwdvDpllvctjZv
HdrDHNfrrBDGGBhBNfHNsLFqmbRQSwqmGTLnTbSF
gcMmgRQPqqPPsgjFSvctCHvHllSSHcvd
JTWfZwhTwzbWwTFTrZnTrDDlDSVtVHLVShtvSHvlHL
bWbWBfzTfwrWJNbTrnzfTwJFpmMQgqsFRsQGqRMggPmPBG
GqCWpGGLpmpWjbSDGjGGmwCzZlvMBTrCvsrlwwswCl
FPFHFVdJgQHJZnslrgvsTrwMlNgw
hQVchcdcZZpZqcDG
JbBRgBsRffgPPFQttQvQQMvG
dmNZgmZVtGTNtNGC
ZqqndLZnccqRbsrgpggsBc
DDvMVmTjwFWPBBTzBF
cqnggcbNNCqbQQqbZbpfQpqgRWlFhLRBhRzRPLFJhlJBfPLh
dpscpcncbbqcpMVSvSrPDMsrjr
hGCGZmVRRcMVsGMtmZWssmFLzbFblnnzfmqbfnzNNb
wjrSPBJdSjjDrggpSJpdrSnlFNlzLTnqNLqqpbqqfMln
dMwPBHPPJHDdvrBBhshWCGcsQRcHRZGV
vdHwhqdtLdVnHBZbFBFzbBPS
TmNCLNDpWfCNmpCgTWNTDMMZlzSggBMzlZlMBlBbZZ
NQfWcscDNQrhqvGLrdhVjh
lZLqzzqvgrCRcQcCLD
HSVVwNTJzwVNTDQrRrrdrBwdhd
TpNTzsfSTVsSpHVppzFpgvvlqZWZPMvMjPPGGsgP
BCMLshLdLDDCgwFRwHHqqRqRWd
QnSqQlGSfpQzTQJNTPNwNPFRFcccHc
mfJJmztnQpGpvnSzGrsqgrhrBBhqjBrthL
BSlmzmlvdNnlQlQQJnJHRVFVFVVqMtqRMfSfCw
WBPsDPBBjfssFHMRRq
DLWpGhbPjbhZrhZDnBQgdNZmQNgmvdzg
WWvgBFgHWChBzgBFbjbtPtnPrsHlsRMrwRrMRR
SGfNpfdGfVpVSGGppSDdwRwclMlfPMwccsntPqPw
TVdpQDSpQZJpVpDQQFBbthvmWzmgvhbjzJ
VVCCbzqdbzhFHvbdhZFPmhCPSNRNGSrPJfTNRSGJfGwPST
LngtBnlcnDvLcTTRfTTwRtGNTG
DpnBjMpLlLDQWDgvpLvbqzmbjzVjVHqbFFqbFq
SbzMbNQQSDdmvqqzdSlWFpwZnvpFWWllpFww
CjLPTPjjLCPtBCLJjBLPLBTFsFFgfwwpZgplpgFnWWRl
nPncrBHGnmrbdmdmNN
FnlblGlTTbNVLVtRvQQvgqRQBCvgNr
DPMDMpMHmnzjPqDhQWvvQvhghq
zMMcddznsjFTldVGlFGT
cLSNGLhmRRVmlVCq
HvzbQBzBMQMpQDpCSlSVZRSCqV
QwWznWnTbQSMMJQHnvwbWjrhNhLFgsGNNrFLNnFNhd
dBrWNQWWcTNqqnNN
bPlmgRgRghlCVlbhwZccCZjZqvmqvmTTvGqmJTvqnGTGvLLJ
DCDZhjllcpDMrSQS
ddtNNTFTwRzGRGCwqnBMjlqMHMfqnB
hDpPsQLLSprhnHVhqhVfHM
QWLWDQZpgpWbQgfspGGRdcGcCcCcztTGZC
GGHFdGwFlswcFtnvTfjMjBFfNBjNBZ
JWmSJLPSRprWWPWVMMVQpZfBvvfQtj
RzPSPDbDDhbhPDLRhCgGHHccsqGCqqtHzG
dbSdptWddDMNtdFvttFclqMTZJlJTlMZqJTJTqjC
BzfwRzrwPzfzLNGmZZCZBTGBqqlH
hVNVQPNQQQVLPwhRrQwgWWvFdDsFWSbdWgdFSFDb
hhSnmhtZSFSqZBJSSqqmJJRHPPLgHtPcGGGcWGtvvHwgvG
fCMpfTQjTrzrzCQMsQdHGHvPGPwLppPRvWPLLc
MdTzCsCMzNzDCTjlmNhRmRnZBllRVh
RrFglccgBVVvFNvCvWlgmDbbDfQDtCdjjDbDwmZD
STnMqSLHJhHHnqLqtnBndbBdfQQZDtZD
GHJPTBsTSsMMSpSBHJFNlWzcvFlzsVzvzgsv
lplNdrVrVrWMMVcJfcDDzbqCCpDL
SSSgvBRSjggPgzvTTRHTvFnfJLbcLsCDLnCLDCcJBsJq
GmHjjRwvHSjHTRjrlZrNMzVMhVrmVW
gdtFtgStSbHCbHMPZrFLPLrVlrVZrP
hQnjMGfDqTvzvpBjVVjPRLRRjJ
QmsQmhvvMtssHtWw
RNjTGSCLJCGdRqMRFvMrfzMvzz
ZpcWcVDpWBmWQMZZpZDpwBcznrshtntvfvhfFtzmvnzvhf
WHHHcVWgQVCbCllbgMLN
ZjjdJHSdSzvcZFMhhhDqDHtthw
rNTlNqVWTmRPlshsDPDlph
WbTNGNmQBRQbRNQgNGmCLdvvjzcCSBqLcLnScL
bZwpSpBvSHCBqNzpdFffqQft
nWRnGRnVnljmlDnzdPfQfdcQPWWfNq
dmRDGMMlDmnVjgMlhBSwCbCgwHbBHhvv
NwqLgLBLgnwNNBGpgsQsddhhpQQg
JcztcZnzVtZvnVcJMTvTJtWtppsQHGdQhhHHQsPhWdPS
fJTJnMmvZvMvRDqFblNBNNjlBf
drZVzZzzNWWzwwTWTZrjWcLCqnRqNnLNLqCqnsPPRL
JhlBgvHBBLnwMBqDwC
GmGFSHmhJSGJwgFJmwJhJhgQVWVdbSWZQzZTrWtZzjzjTz
wPGRPpnzgwwGgLddFBFrnrnJdc
jCsVclQWmCTrJJddrdFs
lWjlCqfmlWccpGPPSgcf
hCThCzTdPcPhzqTzMfVfHrhMMmhVHgVM
lJSJNqwJsZBSsSBFsMprDmFmFDfDDHgHDf
JNGQsSSNGsbZZZSBwZLPtdLjttnqPCbtPbjC
vnlWNpbrNrpShhQDLRLB
MzCjPgffVTVgCJSRQhBdRdJS
VPHcfcBfTzVMTttMzMfgzMfHvrllWvlnvNvlmGwWNwwNmw
BwwsqPJqwBssLlFqLRCDzWwzDGRGGWfSRG
vTtmmthvpphpnNgNvvpvRrDCddDQrCQCzCDrCfnf
pppccNpTVVlqssHHVzBH
HWHphZWVWvMZNvpMtfJZgssffsjJgBlslJ
RLmrFFnGFrFFrrFCRwCrLNPwqfjSJjqJSJBbsqjbbsblfq
LnFLPPGLrGNRQPmndLzPmPmpcDcMHhcMhVHvczcpHHchcV
zwqqvNDVggwqVfNQRlszFBsCCJFtFlFPsz
MSrrGTZPGSSMSjPbTmtlHBBFrFHFsHlsJsct
MnmMPMSZZGSZWmSjnWgfqdgVQDvnqvRDggDV
SQCSBShsQnSsSJswsNpVppPPMVpGpnDVgg
WWjHvmtWZrwvtzzjTTRPrRRrMVNVVGgVGpGR
lTvWjWLfWwbJCQqBSlbB
cjPChhswrNVtMZJjVM
pfvTFvTzLBFndGTlJmVJZmNlCMGtCJ
nfvFTfpbBFdSFpTLswsWDbchwHCWHrbw
lNdNPLJJLHHHlpPJcvtVcsBBrrBvBqrVrC
wDTbwTQRZTMWsVWtmWhhTr
nzRMbSZtMQDnpzzJHLHNflHP
HrwwmwcRbmwcbrrTbwwcrTJWLlPshllhLccqLhnnlljhZhjZ
GMFMSNSpCBSFSdGpNFpBznLlzzhzshlGhhqPhGGL
nFFSCCSSfttBdddDQNDBQpSSrbrmWJwrHfJHWJrbVwWHrgVr
SdddNNCmpNNDhMswhsmbhvHM
frtzqqqFjgrWfgfqtthsnvRHZRRvFlhnvRZb
rtrgqzzrbWtqLGLLtBWzfGcTNCCVGpSNDppTJJVddNpPSG
WWJvJvBgpHSHScQRQSVQLzqL
ddZTlZGZVfQhZRLLMqsR
rPfwrGGrFjjNTGNCCVBggDJHmNDvbmmpmNJJ
bbGrJPRVPtfsVfFlMjBV
WQzhQQQNZQCWNnQDhzWdNjFZggmlHjjmMmMFjFHpMs
CzQCSWDTWhNhzWhTGJwtRRqTblwcclvP
HLDvZgZldDTnLLsswMpVLn
FNVQzQSPznCMmpBwCF
SqfJPfttqffjJPVlhvhZZtvdVDRZ
jVsLvHvvdrSjpJFsGzmnmltnml
nTNTRCTBTmmmFPMJ
CQnCggWQDgBrrSqHjDDfSS
ZpNlrZNcmctZbcZlmcmZhhpPvPHvwBMHJPMTMHBTFJvJ
zmdCnGzGRnLDjQnzPvMFVHMVMLTVwMJv
GGjqssqgzCnCzQsshcffmrbNrrNZtW
DNpTwhpLlWMDWNMhbJjGttJFHgDcjtjG
wqQrdCdqbFtCtJtJ
vffdrwfPrsmqVBBWRVlRRlTSTWSTlR
ZqTCTQQTFvsDSsBDvWBd
hfBLzRLtHHLDDWRRWWDNbd
pHhhnPzLfJcJhzHLzZjcmwCTqTQgwBqqwg
WJHgqgFqrVrqgqCHwsJHHVFZzppZFGGfTtpcfbdpzzpd
RvNMQlMBhwMdMfcpbM
LLRQNBDSSNSwmDDBQRBRBCHsgrgHLVnJVqLsJsnCPJ
BFhGsDsDsBtsPGtQDrrMdbdrffrffbJbRt
cVVqScVSWWvVWgVZjnrHJgLfdrLrnrLLLQ
WmvqNZzzzZSvVzqvcccSzSmqFGCDTGBPQGDhwCDhNDCwPBQp
RqTlHHTTrQqHlTqsrVDqHbrZFZwhpBhphZBFhZpDpLLLfB
nSzGCGdvzdGNPBQQBfhLZfFwFN
WPPPCJMtJSQMJQCCWMJslRrrRgrMRbRqVqqTRR
BMtfLsLZfTPmCtGWZrZqJNJqvpZdWr
bRwgHhhRhbbSRbjSglcgwHHJWPcJdPrnNWrnqnWVVqpdnq
bgjlSgDljHhjgwMPCLPFDMFPGGBC
zJWjczcWjSWghZgzgSSSZflTqwlfqTTbnQwhdTnMdl
NrGVCmNpHFPsrJFbFQMJbJdQTn
JvrtpHHmrCGJCJmNvNpVCsHVgzWgWDDcjjgjDRStWWDLSgzz
HzdFsBBVsfnTfsPmPtDcZqtMhDDz
wrjjRQLlwwwrJQLQbCrbwlJDSlcSDtPZmPSDclWDtcDqWh
RwgprLbNLrLbCCpRCrJLRLFfsGTNNZHBZnnBvvfffnvd
MlqqlWZclnPtZtDSSvwQQjgQpNQSRM
rLJTsBrsJBhshTNNwSQBWNvNgNSg
JbbbChCHsJzHzbWdGHThlFnnPqlPlGPPGncPtFlD
WcMVvwNNvjRcwTQwVcpNRcspPCFtbPztbCTFmtPtCJtbCzmz
grrgDhrnDLnLrdfdLZlLZhmCqzlCbtJlSSStFmttqsJJ
GHHDdgnLDDhrrrgZrZgLNVVVVcRNvcwjWvpWGcRs
qhGhPSJtGhGtJtvNjnJjnvmNQQmj
sRBFlbZsrdBRRGbVGBDwDMDQwQwMNDjjjVNV
CzCflffbBszdBCbdbrtLcfhhgHLGgPccLSPh
zShhHFzgJWFVFFHFHhRPNjwqPLPtLbtrbwVjjr
ssnvTmvCDfpCZTnsfCqwNLNPwbJqNJPwrjZw
vDvpmcnmnBDnsnJTJmQWMHMWzScFggRFRFSW
nnVHHPLrnpssLnrpLRnHtHrjJcCdzCjcDzMzdqwRdjdDcJ
WWTGQQzSGWlTmBbDJJjwMJjcvvlDjw
TGTWBTWmTbgzghZhgzBgpVNrZPPfntfNrVLNNnZP
TqhQnqqLnnqddttNqQWdtqQmppSSFFClRmzmFZFLSmSlFF
BcHjGclVPPBrVrcjrGGDrMgcmmRJbRCFzpZmSDRpRZJJmRzz
ccGjMgvPvsHMgvBHWlhQdqwtllwNdThs
WjddwRGgHRRdMbrwHRwWjHDtDZplslnJnZrsDvCprJPJ
QSLLFqQBffCFststlFnn
CSSmSqzmVVjWMdMjVWgT
lTfQRhVpRzjThpRQTTTlvHrvBvHnPMHgHqHJvn
cGDctCwCdDCGSFcJsFJsFBvgnMBrHvvrqngHgmgssg
SCbSDSFScNpfbRVVJf
RrwmdwMVjMjMTghDWNTJDpWfWG
SbPvNbvbSsPbSvZsPJtJWhHpGGGgJWgJ
lSFvsLNcqzqLrwnFQMnVdmnn
FgCJFTWntWTFtPLmJmmQJmCMMpljWZBwlGMljjjlwvwBvZ
SDSbVbdScSDzbLZMBrjlZpVrZp
ccsSDhSDffzbLNscfcfDcgqhPgTntqmnQmCgtgQCTJ
VnCnrHnPPrCwHmVWtqfMQQqzCqffCZ
DDbDcJJJbpJDGppFpqGZRWfGfddzMWtfWM
tTTglDcgFjwNPHPPwHlH
bMGbqqgPqqVVMGnbVqSMmRfPcJmCTPDDLJDTCmDm
FFjjZvFRsFCctmtvtJWD
wwFhHjQjwQhZrFjQbngglGbRMnSzgbRH
GPTTJSgTPrPPmcTPpdJsGGGjqbRvqlztqlRqMzGjRv
LwnfWLNwwHHQwHnjbbMMjWttqtMmMj
mhwfBDhnQTpJBcBJps
HQQHwMfwlltzMlVljQhVjjHPPPFGPFcCGprPTPPfDrDcGf
pRLdvRvJgqLRBSJCcvFnCDTPTcTGnT
LBLSJbRSLSqbSdBdgJRRqRbwjHHblQttlwtwhzpjMlwhpw
NWLNSNSDtgSgghgdcwccmwGntwclnT
FRCQzJRsvfVVjvzFJfQnffwCcmdwmHmmHmTwmCmdGBcq
sjfJvjfzPRPzvPPVFMssvSLhSSWrMZnSDNrDDhSLZZ
FvLpSLtCfPCWhRSZZMZJSW
jbbjwbHjQmHjHsQrQFMnwTnJznwRzhJRnNTM
gVrjqGqjgrgsFGLDtDBLLfLB
cgTvRWWLVScRWflNJJDfVJmVlG
nPPnnmqjmZHCHBHFdfwNsDhzzfJznhsfhw
bddmQqQjpdFCQWtLQMMSvMMQRS
wjnmPwCgjPnRlwnmvmvvPnTwbSSLLvsLDWdbbWzvsLzWbzbz
NqrGqFHqJlfhhJGbszdWQzzLNtQDzz
FfHFpphrJqJrpGBffcTnBjCnVTMjMRCnVljT
SrfSJGJpSgMprMHdhBGhsdsshdGsmm
nRTRPvQllQlblwvCjTwLTnvBqdhmHDPVsmDmdqshDVhNsP
lbRFHvRwlnlLbnbjLbLjLCzggSpWfMFzSZpzZFJJWpJr
vNLlFldlvPtHFPHQRt
jcpRsScDgshzjqzfVStntBTPMTnmWttntMpp
fSssgVjDsbqSVbCJClLRJLCZRZZb
wnHmCJccDDcrNnrNMRDtTzpTlMpTzpBp
PjSPPGjWjLzTjjMtzzMj
hWvLLFWvHvczVcVn
jgtngnnhMthcnLjMgCZvChDsmdNCvNNZDN
bWqFPbFbLzRFfZBNDNNPZsNd
RbJzGpzVLLLWHHQgTMwcTptQ
sJBhsMWQnhhrFBsFhlQQMfrDCDpLlVCddjTdDDpqDLTLdj
tZHHSRmNHcgmNzpDPJtttqjLqdpL
HbNbZmcHQJbsFWvs
VgPNWGbgSjGjfhRRFfzThtmtzF
qLCQJBqqcPPmLHhHFz
CcJvplQswNgZlNPSbS"""

letters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
priority_dict = {}
for i, letter in enumerate(letters):
    priority_dict[letter] = i+1
#part 1
score = 0
rucksacks = input.split("\n")
for item in rucksacks:
    compartment_1 = item[0:int(len(item)/2)]
    compartment_2 = item[int(len(item)/2):len(item)]
    for letter in compartment_1:
        if letter in compartment_2:
            score += priority_dict[letter]
            compartment_2 = ""

print(score)

#part 2
score = 0
for i, item in enumerate(rucksacks):
    rucksack_checked = False
    if i%3 == 0:
        for letter in item:
            if letter in rucksacks[i+1] and letter in rucksacks[i+2] and not rucksack_checked:
                rucksack_checked = True
                score += priority_dict[letter]

print(score)